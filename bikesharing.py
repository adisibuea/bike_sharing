# -*- coding: utf-8 -*-
"""Copy of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AeGdLxcCDdob_ilAyOVrS3fpE9tOlEKq

# Proyek Analisis Data: Bike Sharing Dataset
- **Nama:** Adi Candra
- **Email:** adisibuea@gmail.com
- **ID Dicoding:** adisibuea

## Menentukan Pertanyaan Bisnis

- Bagaimana jumlah pengguna dalam beberapa bulan terakhir?
- Kapan jam dengan jumlah pengguna sepeda terbanyak?
- Kapan waktu dengan rata-rata pengguna sepeda terbanyak?
- Bagaimana rata-rata pengguna sepeda berdasarkan kondisi cuaca?
- Bagaimana hubungan antara kondisi cuaca dengan jumlah pengguna sepeda?
- Berapa persen pengguna sepeda yang sudah terdaftar?

## Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from matplotlib.ticker import FuncFormatter
st.set_page_config(layout='wide')
"""## Bike Sharing Dashboard"""

### Gathering Data

df_day= pd.read_csv("./day.csv", delimiter=",")
df_day.head()

df_hour= pd.read_csv("./hour.csv", delimiter=",")
df_hour.head()

### Assessing Data

#Menilai tabel `df_day`


df_day.info()

df_day.isna().sum()

print("Jumlah duplikasi: ", df_day.duplicated().sum())

df_day.describe()

df_day.nunique()

#Menilai tabel `df_hour`

df_hour.info()

df_hour.isna().sum()

print("Jumlah duplikasi: ", df_hour.duplicated().sum())

df_hour.describe()

df_hour.nunique()

### Cleaning Data

#Memperbaiki tipe data


datetime_columns = ["dteday"]

for column in datetime_columns:
  df_day["dteday"] = pd.to_datetime(df_day["dteday"])

df_day.info()

datetime_columns = ["dteday"]

for column in datetime_columns:
  df_hour["dteday"] = pd.to_datetime(df_hour["dteday"])

df_hour.info()

## Exploratory Data Analysis (EDA)

### Explore tabel `df_day`


monthly_user = df_day.resample(rule='M', on='dteday').agg({
    "registered": "sum",
    "casual": "sum",
    "cnt": "sum"})
monthly_user.index = monthly_user.index.strftime('%B %Y') #mengubah format order date menjadi nama bulan
monthly_user = monthly_user.reset_index()
monthly_user.rename(columns={
    "dteday": "bulan",
    "cnt": "total"}, inplace=True)

holiday= df_day.groupby(by= 'holiday').agg({
    'registered': 'mean',
    'casual': 'mean',
    'cnt': 'mean'}).reset_index()
holiday['holiday'].replace({0: 'Tidak Libur', 1: 'Libur'}, inplace=True)

weekday= df_day.groupby(by= 'weekday').agg({
    'registered': 'mean',
    'casual': 'mean',
    'cnt': 'mean'}).reset_index()
weekday['weekday'].replace({0: 'Minggu', 1: 'Senin', 2: 'Selasa', 3: 'Rabu', 4: 'Kamis', 5: 'Jumat', 6: 'Sabtu'}, inplace=True)
weekday.sort_values(by='cnt', ascending=False, inplace=True)

workingday= df_day.groupby(by= 'workingday').agg({
    'registered': 'mean',
    'casual': 'mean',
    'cnt': 'mean'}).reset_index()
workingday['workingday'].replace({0: 'Weekend', 1: 'Weekday'}, inplace=True)
workingday.sort_values(by='cnt', ascending=False, inplace=True)

season= df_day.groupby(by= 'season').agg({
    'registered': 'mean',
    'casual': 'mean',
    'cnt': 'mean'}).reset_index()
season['season'].replace({1:'Springer', 2:'Summer', 3:'Fall', 4:'Winter'}, inplace=True)
season.sort_values(by='cnt', ascending=False, inplace=True)

weathersit= df_day.groupby(by= 'weathersit').agg({
    'registered': 'mean',
    'casual': 'mean',
    'cnt': 'mean'}).reset_index()
weathersit['weathersit'].replace({1:'Clear', 2:'Mist', 3:'Light Snow', 4:'Heavy Rain'}, inplace=True)

pengguna= df_day.agg({
    'casual': 'mean',
    'registered': 'mean'})

###Explore tabel `df_hour`

df_hour["waktu"] = df_hour.hr.apply(lambda hr: '3.00-8.00' if 3 <= hr < 9 else
                                         '9.00-14.00' if 9 <= hr < 15 else
                                         '15.00-20.00' if 15 <= hr < 21 else '21.00-2.00')
waktu= df_hour.groupby(by="waktu").cnt.sum().reset_index().sort_values(by="cnt", ascending=False)
waktu.rename(columns={"cnt": "total"}, inplace=True)

# membuat filter dengan selectbox
with st.sidebar:
    'Jumlah pengguna berdasarkan rentang waktu (bulan):'
    month_options = monthly_user['bulan']
    start_month = st.selectbox(
        'Pilih Bulan Awal',
        options=month_options,
        index=0
    )
    end_month = st.selectbox(
        'Pilih Bulan Akhir',
        options=month_options,
        index=len(month_options) - 1
    )
monthly_user['bulan_datetime'] = pd.to_datetime(monthly_user['bulan'], format='%B %Y')
start_date = pd.to_datetime(start_month, format='%B %Y')
end_date = pd.to_datetime(end_month, format='%B %Y')
filtered_data = monthly_user[(monthly_user['bulan_datetime'] >= start_date) & (monthly_user['bulan_datetime'] <= end_date)]
filtered_data.drop(columns=['bulan_datetime'], inplace=True)

## Visualization & Explanatory Analysis

col1, col2, col3 = st.columns(3)
 
with col1:
    max_casual = round(filtered_data.casual.max())
    st.metric("Most Casual Users", value=max_casual)
 
with col2:
    max_registered = round(filtered_data.registered.max())
    st.metric("Most Registered Users", value=max_registered)
 
with col3:
    max_total = round(filtered_data.total.max())
    st.metric("Most Total Users", value=max_total)

"""### Jumlah pengguna dalam beberapa bulan terakhir
"""
plt.figure(figsize=(10, 6))
fig, ax = plt.subplots()
for column in filtered_data.columns[1:]:
    plt.plot(filtered_data['bulan'], filtered_data[column], label=column)
plt.xlabel('Bulan')
plt.ylabel('Jumlah')
plt.title('Jumlah pengguna bulanan')
plt.xticks(rotation=45, fontsize=5)
plt.grid(linestyle='--')
plt.legend()
_, midcol, _= st.columns([1,3,1])
with midcol:
    st.pyplot(fig)

"""### Jam dengan jumlah pengguna sepeda terbanyak"""
_, midcol, _= st.columns([1,1,1])
with midcol:
    max_hour = round(waktu.total.max())
    st.metric("Most Users", value=max_hour)

def format_thousands(x, pos):
    'The two args are the value and tick position'
    return '%1.0f' % x
colors = ["#1967d2", "#D3D3D3", "#D3D3D3", "#D3D3D3"]
fig, ax = plt.subplots()
sns.barplot(x='waktu', y='total', data=waktu, palette=colors)
plt.title('Jumlah pengguna berdasarkan waktu', fontsize= 15)
plt.xlabel('Pukul', fontsize= 15)
plt.ylabel('Total', fontsize= 15)
plt.xticks(fontsize=10)
ax.yaxis.set_major_formatter(FuncFormatter(format_thousands))
_, midcol, _= st.columns([1,1,1])
with midcol:
    st.pyplot(fig)

"""### Waktu dengan rata-rata pengguna sepeda terbanyak"""
col1, col2, col3 = st.columns(3)
 
with col1:
    max_weekday = round(weekday.cnt.max())
    st.metric("Most Users", value=max_weekday)
 
with col2:
    max_holiday = round(holiday.cnt.max())
    st.metric("Most Users", value=max_holiday)
 
with col3:
    max_workingday = round(workingday.cnt.max())
    st.metric("Most Users", value=max_workingday)
    
fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(24, 6))
sns.barplot(x='weekday', y='cnt', data=weekday, ax=ax[0])
ax[0].set_title('Rata-rata pengguna berdasarkan hari', fontsize= 15)
ax[0].set_xlabel('Hari', fontsize= 15)
ax[0].set_ylabel('Rata-rata pengguna', fontsize= 15)
ax[0].legend=False
sns.barplot(x='holiday', y='cnt', data=holiday, ax=ax[1])
ax[1].set_title('Rata-rata pengguna berdasarkan hari libur', fontsize= 15)
ax[1].set_xlabel('Libur vs Tidak libur', fontsize= 15)
ax[1].set_ylabel('Rata-rata pengguna', fontsize= 15)
sns.barplot(x='workingday', y='cnt', data=workingday, ax=ax[2])
ax[2].set_title('Rata-rata pengguna berdasarkan hari kerja', fontsize= 15)
ax[2].set_xlabel('Weekend vs Weekday', fontsize= 15)
ax[2].set_ylabel('Rata-rata pengguna', fontsize= 15)
st.pyplot(fig)

"""### Rata-rata pengguna sepeda berdasarkan kondisi cuaca"""
col1, col2, col3 = st.columns(3)
 
with col1:
    max_season = round(season.cnt.max())
    st.metric("Most Users", value=max_season)
 
with col3:
    max_weathersit = round(weathersit.cnt.max())
    st.metric("Most Users", value=max_weathersit)

fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(24, 6))
sns.barplot(x='cnt', y='season', data=season, ax=ax[0])
ax[0].set_title('Rata-rata pengguna berdasarkan musim', fontsize= 15)
ax[0].set_xlabel('Rata-rata pengguna', fontsize= 15)
ax[0].set_ylabel('Musim', fontsize= 15)
sns.barplot(x='cnt', y='weathersit', data=weathersit, ax=ax[1])
ax[1].set_title('Rata-rata pengguna berdasarkan cuaca', fontsize= 15)
ax[1].set_xlabel('Rata-rata pengguna', fontsize= 15)
ax[1].set_ylabel('Kondisi Cuaca', fontsize= 15)
st.pyplot(fig)

"""### Hubungan antara kondisi cuaca dengan jumlah pengguna sepeda"""

fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(24, 6))
sns.regplot(data=df_day, x=df_day['temp'], y=df_day['cnt'], color="blue", ax=ax[0])
ax[0].set_xlabel('Temperatur', fontsize= 15)
ax[0].set_ylabel('Total', fontsize= 15)
ax[0].set_title('Hubungan temperatur dengan total pengguna', fontsize= 15)
sns.regplot(data=df_day, x=df_day['hum'], y=df_day['cnt'], color="blue",ax=ax[1])
ax[1].set_xlabel('Kelembapan', fontsize= 15)
ax[1].set_ylabel('Total', fontsize= 15)
ax[1].set_title('Hubungan kelembapan dengan total pengguna', fontsize= 15)
sns.regplot(data=df_day, x=df_day['windspeed'], y=df_day['cnt'], color="blue",ax=ax[2])
ax[2].set_xlabel('Kecepatan Angin', fontsize= 15)
ax[2].set_ylabel('Total', fontsize= 15)
ax[2].set_title('Hubungan kecepatan angin dengan total pengguna', fontsize= 15)
st.pyplot(fig)

"""### Pengguna sepeda yang sudah terdaftar"""

colors = ("#72BCD4", "#D3D3D3")
labels = ['Casual', 'Registered']
explode = (0.1, 0)
fig, ax = plt.subplots()
plt.pie(
    x=pengguna,
    labels=labels,
    autopct='%1.1f%%',
    colors=colors,
    explode=explode)
plt.title('Persentase pengguna terdaftar')
_, midcol, _= st.columns([1,1,1])
with midcol:
   st.pyplot(fig)

"""## Conclusion

- Conclution pertanyaan 1: Pengguna sepeda dalam 2 tahun terakhir terus mengalami peningkatan meskipun sempat mengalami penurunan di akhir tahun 2011 dan 2012
- Conclution pertanyaan 2: Pengguna sepeda menggunakan sepeda paling banyak pada sore hari sekitar pukul 15.00-20.00
- Concultion pertanyaan 3: Rata-rata pengguna sepeda paling banyak menggunakan sepeda ketika weekday yaitu dari hari senin-jumat dan ketika sedang tidak libur. Hari dengan penggunaan paling banyak yaitu hari jumat
- Concultion pertanyaan 4: Rata-rata pengguna sepeda paling banyak menggunakan sepeda di musim gugur dan ketika kondisi cuaca sedang cerah
- Concultion pertanyaan 5: Semakin tinggi temperatur lingkungan semakin banyak juga orang yg menggunakan sepeda. Semakin tinggi kelembapan dan kecepatan angin semakin sedikit orang yg menggunakan sepeda
- Concultion pertanyaan 6: Pengguna sepeda yang sudah terdaftar sebagai anggota sebanyak 81,2%
"""